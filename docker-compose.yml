version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: arbitrage-postgres
    environment:
      POSTGRES_DB: arbitrage
      POSTGRES_USER: arbitrage_user
      POSTGRES_PASSWORD: arbitrage_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U arbitrage_user -d arbitrage"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: arbitrage-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Service
  backend:
    build: .
    container_name: arbitrage-backend
    ports:
      - "8768:8768"
    environment:
      # Stellar Network Configuration
      - STELLAR_NETWORK=TESTNET
      - STELLAR_HORIZON_URL=https://horizon-testnet.stellar.org
      - STELLAR_SOROBAN_RPC_URL=https://soroban-testnet.stellar.org
      - STELLAR_NETWORK_PASSPHRASE=Test SDF Network ; September 2015
      
      # Database Configuration
      - DATABASE_URL=postgresql://arbitrage_user:arbitrage_password@postgres:5432/arbitrage
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6379/0
      
      # Server Configuration
      - PORT=8768
      - HOST=0.0.0.0
      - DEBUG=true
      
      # Security Configuration
      - SECRET_KEY=dev_secret_key_change_in_production
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000
      
      # Logging Configuration
      - LOG_LEVEL=INFO
      - LOG_FILE=logs/arbitrage.log
      
      # Simulation Parameters
      - NUM_ACCOUNTS=10
      - SIMULATION_INTERVAL=10
      - ARBITRAGE_SCAN_INTERVAL=15
      
      # Trading Parameters
      - MIN_PROFIT_THRESHOLD=0.01
      - MAX_TRADE_AMOUNT=1000
      - SLIPPAGE_TOLERANCE=0.005
    volumes:
      - ./logs:/app/logs
      - ./web/dashboard/backend:/app/backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8768/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Development Server (for development only)
  frontend-dev:
    image: node:18-alpine
    container_name: arbitrage-frontend-dev
    working_dir: /app
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8768
      - VITE_WS_URL=ws://localhost:8768
    volumes:
      - ./web/dashboard:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend

  # Nginx Reverse Proxy (for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: arbitrage-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./web/dashboard/dist:/usr/share/nginx/html
    depends_on:
      - backend
    profiles:
      - production

volumes:
  postgres_data:
  redis_data: